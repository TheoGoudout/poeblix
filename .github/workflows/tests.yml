# This is a basic workflow to help you get started with Actions

name: Continuous Tests (Python 3.9)

# Controls when the workflow will run
on:
  schedule:
  - cron: "*/60 * * * *"
  
  pull_request:
    branches:
      - '**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Multiple python versions
    strategy:
      matrix:
        python-version: [ '3.7', '3.8', '3.9' ]
        
    name: Python ${{ matrix.python-version }} Tests

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      # Uses particular Python version
      - uses: actions/setup-python@v4
        with:
          # Version range or exact version of Python to use, using SemVer's version range syntax. Reads from .python-version if unset.
          python-version: ${{ matrix.python-version }}

      # Runs a set of commands using the runners shell
      # Force updates poetry to the latest prerelease version to catch backwards incompatibility
      # Run all() twice as mypy needs to install types and be reran, and another time for a retry in case of 
      #   connection timeout issues when downloading dependencies
      - name: Run a multi-line script
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          poetry self update --preview
          poetry config virtualenvs.create false
          cd $GITHUB_WORKSPACE
          ./devtool bootstrap || ./devtool bootstrap
          poetry add poetry@latest --allow-prereleases
          ./devtool all || ./devtool all
